import xml.etree.ElementTree as et

def parseNmap(p_type):
    tree = et.parse('out.xml')
    root = tree.getroot()
    infos = {}
    hosts = []
    ip = []
    ports = []
    os = []

    for child in root.findall('.//hosts'):
        infos['host_number'] = child.attrib['up']
    
    for child in root.findall('.//hostname'):
        hosts.append(child.attrib['name'] + " (" + child.attrib['type'] + ")")
    infos['hostname'] = hosts
    
    for child in root.findall('.//address'):
        ip.append(child.attrib['addr'])
    
    infos['ip_address'] = ip

    if p_type == 'IP Protocol Scan':
        for child in root.findall('.//port'):
            features = dict()
            features['port'] = child.attrib['portid']
            for children in child.findall('.//state'):
                features['state'] = children.attrib['state']         
            for children in child.findall('.//service'):
                features['service'] = children.attrib['name']
    else: 
        for child in root.findall('.//port'):
            features = dict()
            features['port'] = child.attrib['portid'] + "/" + child.attrib['protocol']
            for children in child.findall('.//state'):
                features['state'] = children.attrib['state']         
            for children in child.findall('.//service'):
                features['service'] = children.attrib['name']
                version = ''
                if 'product' in children.attrib:
                    version += children.attrib['product']
                if 'version' in children.attrib:
                    version += " " + children.attrib['version']
                if 'extrainfo' in children.attrib:
                    version += " (" + children.attrib['extrainfo'] + ")"
                features['version'] = version
            for children in child.findall(f'.//script'):
                script = ''
                if 'id' in children.attrib:
                    script += children.attrib['id']
                if 'output' in children.attrib:
                    script += " - " + children.attrib['output']
                features['script'] = script
            ports.append(features)

    p_number = 0
    for port in ports:
        if port['state'] == 'open':
            p_number += 1
    
    infos['port_number'] = p_number
    infos['ports'] = ports

    for child in root.findall('.//osmatch'):
        os.append(dict(os = child.attrib['name'], accuracy = child.attrib['accuracy']))
    
    infos['os'] = os

    return infos
    
